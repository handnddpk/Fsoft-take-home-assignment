version: '3.8'

x-airflow-common:
  &airflow-common
  build: .
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    _PIP_ADDITIONAL_REQUIREMENTS: ''
  volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/data:/opt/airflow/data
    - ${AIRFLOW_PROJ_DIR:-.}/airflow/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-.}/src:/opt/airflow/dags/src
    - ${AIRFLOW_PROJ_DIR:-.}/sql:/opt/airflow/sql
    - airflow-logs:/opt/airflow/logs
    - airflow-db:/opt/airflow
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on: &airflow-common-depends-on
    airflow-init:
      condition: service_completed_successfully

services:
  # ETL Pipeline Service (standalone execution)
  etl-pipeline:
    build: .
    container_name: customer-transaction-etl
    environment:
      PYTHONPATH: "/opt/airflow/dags"
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}/data:/opt/airflow/data
      - ${AIRFLOW_PROJ_DIR:-.}/src:/opt/airflow/dags/src
      - ${AIRFLOW_PROJ_DIR:-.}/sql:/opt/airflow/sql
    command: python /opt/airflow/dags/src/etl_pipeline.py --input-dir /opt/airflow/data/input --output-dir /opt/airflow/data/output
    networks:
      - airflow

  # Airflow Database Initialization
  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        if [[ -z "${AIRFLOW_UID}" ]]; then
          echo "AIRFLOW_UID not set - using default (50000)"
          export AIRFLOW_UID=50000
        fi
        chown -R "${AIRFLOW_UID}:0" /opt/airflow/{logs,data}
        exec /entrypoint airflow db init
        airflow users create \
          --username admin \
          --firstname Peter \
          --lastname Parker \
          --role Admin \
          --email admin@company.com \
          --password admin
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
    user: "0:0"

  # Airflow Webserver
  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
    networks:
      - airflow

  # Airflow Scheduler
  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler
    command: scheduler
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
    networks:
      - airflow

  # Airflow Triggerer (for async tasks)
  airflow-triggerer:
    <<: *airflow-common
    container_name: airflow_triggerer
    command: triggerer
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type TriggererJob --hostname "$${HOSTNAME}"']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
    networks:
      - airflow

volumes:
  airflow-logs:
  airflow-db:

networks:
  airflow:
    driver: bridge
